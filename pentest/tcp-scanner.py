#!/usr/bin/python3.6
# coding = utf-8

from argparse import ArgumentParser
from socket import *


def connection_scan(target_host: str, target_port: int) -> None:
    """
Funkcija se pokušava spojiti na poslužitelj na predanoj adresi. Ako je poslužitelj aktivan,
dohvaća se 'banner' usluge.

    :rtype: None
    :param target_host: adresa mete
    :param target_port: vrata mete
    """
    try:
        conn_sock = socket(AF_INET, SOCK_STREAM)
        conn_sock.connect((target_host, target_port))
        conn_sock.send('ViolentPython\r\n'.encode())
        results = conn_sock.recv(1024)
        print('[+] %d/tcp open' % target_port)
        print('[+] ' + results.decode())
        conn_sock.close()
    except timeout:
        print('[-] %d/tcp closed ' % target_port)


def port_scan(target_host: str, *target_ports: int) -> None:
    """
Pokreće skeniranje navedenih vratiju na predanoj adresi poslužitelja.

    :rtype: None
    :param target_host: adresa mete
    :param target_ports: vrata koja će se testirati
    """
    target_ip = None
    try:
        target_ip = gethostbyname(target_host)
    except herror:
        print("[-] Cannot resolve '%s': Unknown host" % target_host)

    # target_name = None
    try:
        target_name = gethostbyaddr(target_ip)
        print("\n[+] Scan results for %s" % target_name[0])
    except herror:
        print("\n[+] Scan results for %s" % target_ip)

    setdefaulttimeout(1)
    for target_port in target_ports:
        print('[*] Scanning port %d' % target_port)
        connection_scan(target_host, target_port)


def main():
    """
Main funkcija
    """
    parser = ArgumentParser('Ova skripta još ne radi ništa')
    parser.add_argument('-H', '--hostname', required=True, type=str, help='target hostname or IP address', nargs='?')
    parser.add_argument('-p', '--ports', required=True, type=int, help='target ports', nargs='+')
    args = parser.parse_args()
    host = args.hostname
    ports = args.ports
    if host is None or ports is None:
        parser.print_usage()

    port_scan(host, ports)


if __name__ == '__main__':
    main()
